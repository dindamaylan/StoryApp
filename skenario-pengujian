Skenario Pengujian Story App:

A. Login View Model
    1. Ketika gagal:
        - Pastikan memanggil method AuthUser Login.
        - Pastikan hasil actual not null.
        - Pastikan hasil expect dan actual sama.
        - Pastikan actual.isSuccess bernilai false
        - Pastikan actual.isFailure bernilai true
    2. Ketika berhasil Login:
        - Pastikan memanggil method AuthUser Login.
        - Pastikan hasil actual not null.
        - Pastikan hasil expect dan actual sama.
        - Pastikan actual.isSuccess bernilai true
        - Pastikan actual.isFailure bernilai false
    3. Ketika berhasil Login:
        - Pastikan memanggil method AuthUser getTokenAuth.
        - Pastikan hasil token actual tidak kosong
    4. Ketika memanggil method autentifikasi token:
        - Pastikan memanggil method AuthUser saveAuthToken untuk menyimpan token
    5. Ketika logout:
        - Pastikan memanggil method AuthUser getTokenAuth.
        - Pastikan hasil actual dari token = kosong

B. Register View Model
    1. Ketika gagal Register:
        - Pastikan memanggil method authUser register.
        - Pastikan hasil actual not null.
        - Pastikan hasil expect dan actual sama.
        - Pastikan actual.isSuccess bernilai false
        - Pastikan actual.isFailure bernilai true
    2. Ketika berhasil Register:
        - Pastikan memanggil method authUser register
        - Pastikan hasil actual not null
        - Pastikan hasil expect dan actual sama.
        - Pastikan actual.isSuccess bernilai true
        - Pastikan actual.isFailure bernilai false

C. Other View Model
    1. Ketika logout:
        - Pastikan memanggil method AuthUser saveAuthToken

D. Dashboard View Model
    1. ketika get stories:
        - Pastikan memanggil method repoStories getStories
        - Pastikan data actual tidak null
        - Pastikan data dummy sama dengan data differ snapshot
        - Pastikan ukuran data dummy sama dengan ukuran data differ snapshot
        - Pastikan nama dari data dummy ke-0 sama dengan nama dari data differ snapshot ke-0

E. Story Add View Model
    1. Ketika berhasil Upload Story:
        - Pastikan memanggil method repoStories postStories
        - Pastikan data actual tidak null
        - Pastikan hasil expect dan actual sama.
        - Pastikan data.first().isSuccess bernilai true
        - Pastikan data.first().isFailure bernilai false
    2. Ketika gagal Upload Story:
        - Pastikan memanggil method repoStories postStories
        - Pastikan data actual tidak null
        - Pastikan hasil expect dan actual sama.
        - Pastikan data.first().isSuccess bernilai false
        - Pastikan data.first().isFailure bernilai true

F. Location View Model
    1. Ketika berhasil mendapatkan story berdasarkan lokasi:
        - Pastikan memanggil method repoStories getStoriesbyLocation
        - Pastikan hasil actual not null
        - Pastikan hasil expect dan actual sama.
        - Pastikan expect.fist().isSuccess bernilai true
        - Pastikan expect.first().isFailure bernilai false
    2. Ketika gagal mendapatkan story berdasarkan lokasi:
        - Pastikan memanggil method repoStories getStoriesbyLocation
        - Pastikan hasil actual not null
        - Pastikan hasil expect dan actual sama.
        - Pastikan expect.fist().isSuccess bernilai false
        - Pastikan expect.first().isFailure bernilai true

